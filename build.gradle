project.buildDir='dist';
task angularAppDependencyManagement(type: Exec){
    commandLine "cmd", "/c", "npm install";
}
task angularAppBuild(type: Exec) {
    inputs.file('package-lock.json').withPathSensitivity(PathSensitivity.RELATIVE);
    inputs.dir('src').withPathSensitivity(PathSensitivity.RELATIVE);
    outputs.dir('$buildDir');
    outputs.cacheIf { true };
    commandLine "cmd", "/c", "npm run build";
}

task angularAppBuildProd(type: Exec) {
    inputs.file('package-lock.json').withPathSensitivity(PathSensitivity.RELATIVE);
    inputs.dir('src').withPathSensitivity(PathSensitivity.RELATIVE);
    outputs.dir('$buildDir');
    outputs.cacheIf { true };
    commandLine "cmd", "/c", "npm run ng build --prod";
}
task angularAppTest(type: Exec) {
    commandLine "cmd", "/c", "npm run test";
}
task angularAppLint(dependsOn:'angularAppLintReporter', type: Exec) {
    commandLine "cmd", "/c", "npm run ng lint";
}
task angularAppLintReporter(type: Exec) {
    commandLine "cmd", "/c", "npm run lint-reporter";
}

task angularAppE2ETest(type: Exec) {
    commandLine "cmd", "/c", "npm run e2e";
}

task angularAppPublishTarget(type: Copy) {
    from 'target'
    into 'C:/buildPipeline/target'
    include '**/*.*'
}

task angularAppPublishDist(type: Copy) {
    from 'dist'
    into 'C:/buildPipeline/dist'
    include '**/*.*'
}

task angularAppPublishClean(type: Delete){
    delete 'C:/buildPipeline/target', 'C:/buildPipeline/dist'
}

task angularAppPublish(type: GradleBuild){
    tasks = ['angularAppPublishClean', 'angularAppPublishTarget', 'angularAppPublishDist']
}

task buildTestEnv(type: Exec) {
    commandLine "cmd", "/c", "gradle angularAppDependencyManagement angularAppBuild angularAppLint angularAppTest angularAppE2ETest";
}

task buildTestEnv1(type: GradleBuild){
    tasks = ['angularAppDependencyManagement', 'angularAppBuild', 'angularAppLint', 'angularAppTest','angularAppE2ETest']
}